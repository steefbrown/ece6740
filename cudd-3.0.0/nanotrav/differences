1c1
< # Nanotrav Version #0.12, Release date 2003/12/31
---
> # Nanotrav Version #0.13, Release date 2015/7/15
3,188c3,32
< 
< 
< **************READING IN NETWORK***************
< 
< Number of inputs: 2
< 
< 
< 
< **************GENERATING NETWORK BDD***************
< 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< : 4 nodes 1 leaves 1.5 minterms
< ID = !0x7c73c	index = 0	T = 1        	E = !0x7c73b
< ID =  0x7c73b	index = 1	T = 1        	E = !0x7c73a
< ID =  0x7c73a	index = 2	T = 1        	E = !1        
< 
< 
< 
< **************COUNTING BDD NODES***************
< 
< 
< Top node: 0xF8E781 
< 
< Number of nodes: 4 
< 
< Number of levels: 3 
< 
< 
< **************DETERMINING BOUNDSET AND FREESET NODES***************
< 
< Node: F8E680 
< Node index: 2147483647 
< i: 2147483647 
< 
< Node: F8E740 
< Node index: 2 
< i: 2 
< 
< Node: F8E760 
< Node index: 1 
< i: 1 
< 
< Node: F8E780 
< Node index: 0 
< i: 0 
< 
< 
< 
< 
<  T node value: F8E680
< number edges: 0 
< E node value: F8E741
< number edges: 0 
< 
< 
< 
<  T node value: F8E680
< number edges: 0 
< E node value: F8E761
< number edges: 0 
< Cut Level: 0
< 
< Number of Sigma Zero Edges = 0
< i: 2147483647 
< i: 2 
< i: 1 
< i: 0 
< boundsetSize: 0
< n: 4
< Bound Set:
< Free Set: F8E680, F8E740, 0, 0,
< 
< 
< **************DETERMINING NUMBER OF SIG ZERO EDGES***************
< 
< 
< 
< **************BUILDING DIVISOR BDD***************
< 
< BDD reordering with sifting: from 4 to ... 4 nodes in 
< 
< 
< **************BUILDING QUOTIENT BDD***************
< 
< Printing Quotient BLIF
< Printing Quotient DOT
< 
< End of Bi-Decomposition Method.
< 
< 
< 
< 
< Starting Functional Decomposition Method
< 
< Node: FA3BC0 
< Node index: 2147483647 
< i: 2147483647 
< 
< Node: FA3C80 
< Node index: 2 
< i: 2 
< 
< Node: FA3CA0 
< Node index: 1 
< i: 1 
< 
< Node: FA3CC0 
< Node index: 0 
< i: 0 
< 
< Node: FACE20 
< Node index: 2147483647 
< i: 2147483647 
< 
< Node: FACEE0 
< Node index: 2 
< i: 2 
< 
< Node: FACF00 
< Node index: 1 
< i: 1 
< 
< Node: FACF20 
< Node index: 0 
< i: 0 
< 
< boundsetSize = 0
< Freeset Size = 4
< One node is: FA3BC0
< Freeset[0] is: F8E680
< Freeset[1] is: F8E740
< cvar = 0
< 
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< number of bits = 1
< 
< Our boundset nodes:
< Our cutset nodes:
< One Node = FACE20, Zero Node = FACE21
< 
< *********Mapping**********
< 
< *********End of Mapping**********
< Root node: FACF21
< filename: ash_curt_files/hw5_0.blif
< Creating blif...
< Optimizing variable ordering...
< Estimated delay: 0.5us...
< Net name: s27c.bench
< End of main
< 
< 
---
> Order before final reordering
> G5 G6 G7 
> Number of inputs = 3
> Building transition relation. Time = 
> Transition relation: 3 parts 3 latches 4 nodes
> Traversing. Time = 
> S0: 4 nodes 1 leaves 1 minterms
> Eliminated 3 vars. Transition function 1 nodes.
> Extracted 2 repeated parts in 1 factors.
> new factor of 2 nodes
> Merging 3 factors. Independent image: 1 nodes
> new factor 2 nodes
> new factor 4 nodes
> From[1]: 4 nodes 1 leaves 1 minterms
> Reached[1]: 3 nodes 1 leaves 2 minterms
> 2
> 2
> Eliminated 3 vars. Transition function 1 nodes.
> Extracted 2 repeated parts in 1 factors.
> new factor of 2 nodes
> Merging 3 factors. Independent image: 1 nodes
> new factor 2 nodes
> new factor 4 nodes
> depth = 1
> R: 3 nodes 1 leaves 2 minterms
> Analyzing latch dependencies
> G5 is stuck at 0
> G7 is stuck at 0
> new reached: 1 nodes 1 leaves 2 minterms
> 2 latches are redundant
1c1
< # Nanotrav Version #0.12, Release date 2003/12/31
---
> # Nanotrav Version #0.13, Release date 2015/7/15
3,297c3,64
< 
< 
< **************READING IN NETWORK***************
< 
< Number of inputs: 3
< 
< 
< 
< **************GENERATING NETWORK BDD***************
< 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< : 4 nodes 1 leaves 3 minterms
< ID =  0x3953b	index = 0	T = 0x39538	E =  0x3953a
< ID =  0x3953a	index = 1	T = 0x39538	E = !1        
< ID =  0x39538	index = 2	T = 1        	E = !1        
< 
< 
< 
< **************COUNTING BDD NODES***************
< 
< 
< Top node: 0x72A760 
< 
< Number of nodes: 4 
< 
< Number of levels: 3 
< 
< 
< **************DETERMINING BOUNDSET AND FREESET NODES***************
< 
< Node: 72A640 
< Node index: 2147483647 
< i: 2147483647 
< 
< Node: 72A700 
< Node index: 2 
< i: 2 
< 
< Node: 72A740 
< Node index: 1 
< i: 1 
< 
< Node: 72A760 
< Node index: 0 
< i: 0 
< 
< 
< 
< 
<  T node value: 72A700
< number edges: 0 
< E node value: 72A641
< number edges: 1 
< 
< 
< 
<  T node value: 72A700
< number edges: 1 
< E node value: 72A740
< number edges: 1 
< Cut Level: 2
< 
< Number of Sigma Zero Edges = 1
< i: 2147483647 
< i: 2 
< i: 1 
< i: 0 
< boundsetSize: 2
< n: 2
< Bound Set: 72A740, 72A760,
< Free Set: 72A640, 72A700,
< 
< 
< **************DETERMINING NUMBER OF SIG ZERO EDGES***************
< 
< 
< 
< **************BUILDING DIVISOR BDD***************
< 
< Entering for loop. i = 0
< Node is in freeset. j = 1
< Node was redirected to one node.
< Entering for loop. i = 1
< Node is in freeset. j = 1
< Node was redirected to one node.
< BDD reordering with sifting: from 7 to ... 6 nodes in 
< 
< 
< **************BUILDING QUOTIENT BDD***************
< 
< Entering for QUOTIENT loop. i = 0
< Quotient T child fine.
< Quotient E child fine.
< Entering for QUOTIENT loop. i = 1
< Quotient T child fine.
< Quotient E child fine.
< Printing Quotient BLIF
< Printing Quotient DOT
< 
< End of Bi-Decomposition Method.
< 
< 
< 
< 
< Starting Functional Decomposition Method
< 
< Node: 73FB80 
< Node index: 2147483647 
< i: 2147483647 
< 
< Node: 73FC40 
< Node index: 2 
< i: 2 
< 
< Node: 73FC80 
< Node index: 1 
< i: 1 
< 
< Node: 73FCA0 
< Node index: 0 
< i: 0 
< 
< Node: 748DE0 
< Node index: 2147483647 
< i: 2147483647 
< 
< Node: 748EA0 
< Node index: 2 
< i: 2 
< 
< Node: 748EE0 
< Node index: 1 
< i: 1 
< 
< Node: 748F00 
< Node index: 0 
< i: 0 
< 
< boundsetSize = 2
< Freeset Size = 2
< One node is: 73FB80
< Freeset[0] is: 72A640
< Freeset[1] is: 72A700
< Entering for boundset loop. i = 0, node = 748EA0
< Entering next loop. j = 0, node = 748EA0
< Entering next loop. j = 1, node = 748EA0
< Node is in freeset. j = 1, node = 748EA0
< Node was added to bset_cutset.
< Node was added to cutset.
< Already in boundset loop. i = 0, node = 748DE1
< Entering for boundset loop. i = 1, node = 748EA0
< Entering next loop. j = 0, node = 748EA0
< Entering next loop. j = 1, node = 748EA0
< Node is in freeset. j = 1, node = 748EA0
< Node was added to bset_cutset.
< Already in boundset loop. i = 1, node = 748EE0
< cvar = 1
< 
< Cutset node[0] = 748EA0
< temp_cvar = 1
< i = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< number of bits = 2
< 
< Our boundset nodes: 748EE0 748F00
< Our cutset nodes: 748EA0
< Added 748EE0 to our mapping, then child: 748EA0, else child: 748DE1
< Added 748EA0's encoding 0
< Added 748DE1's encoding 1
< Added 748F00 to our mapping, then child: 748EA0, else child: 748EE0
< Added 748EA0's encoding 0
< One Node = 748DE0, Zero Node = 748DE1
< 
< *********Mapping**********
< Mapping node = 748EE0, Mapping E_Enc = 1, Mapping T_Enc = 0
< Mapping node = 748F00, Mapping E_Enc = 0, Mapping T_Enc = 0
< 
< *********End of Mapping**********
< Map_Node = 748EE0, Encoding = 0, Shifted Encoding = 0
< Map node child before assignment is: 748EA0
< Map node child after assignment is: 748DE1
< BDD reordering with sifting: from 7 to ... 7 nodes in 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< Map_Node = 748EE0, Encoding = 1, Shifted Encoding = 1
< BDD reordering with sifting: from 7 to ... 7 nodes in 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< : 4 nodes 1 leaves 4 minterms
< ID =  0x3a478	index = 0	T = 0x3a475	E =  0x3a474
< ID =  0x3a474	index = 1	T = 1        	E = !1        
< ID =  0x3a475	index = 2	T = 1        	E = !1        
< 
< Map_Node = 748F00, Encoding = 0, Shifted Encoding = 0
< Map node child before assignment is: 748EA0
< Map node child after assignment is: 748DE1
< BDD reordering with sifting: from 7 to ... 6 nodes in 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< Map_Node = 748F00, Encoding = 0, Shifted Encoding = 0
< BDD reordering with sifting: from 6 to ... 6 nodes in 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< : 2 nodes 1 leaves 4 minterms
< ID =  0x3a478	index = 0	T = 1        	E = !1        
< 
< Root node: 748F00
< filename: ash_curt_files/hw5_0.blif
< Creating blif...
< Optimizing variable ordering...
< Estimated delay: 0.5us...
< Map_Node = 748EE0, Encoding = 0, Shifted Encoding = 0
< Map node child before assignment is: 748F20
< Map node child after assignment is: 748DE1
< BDD reordering with sifting: from 6 to ... 6 nodes in 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< Map_Node = 748EE0, Encoding = 1, Shifted Encoding = 0
< BDD reordering with sifting: from 6 to ... 6 nodes in 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< : 2 nodes 1 leaves 4 minterms
< ID =  0x3a478	index = 0	T = 1        	E = !1        
< 
< Map_Node = 748F00, Encoding = 0, Shifted Encoding = 0
< Map node child before assignment is: 748DE0
< Map node child after assignment is: 748DE1
< BDD reordering with sifting: from 6 to ... 6 nodes in 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< Map_Node = 748F00, Encoding = 0, Shifted Encoding = 0
< BDD reordering with sifting: from 6 to ... 6 nodes in 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< : 2 nodes 1 leaves 4 minterms
< ID =  0x3a478	index = 0	T = 1        	E = !1        
< 
< Root node: 748F00
< filename: ash_curt_files/hw5_1.blif
< Creating blif...
< Optimizing variable ordering...
< Estimated delay: 0.5us...
< Net name: closest
< End of main
< 
< 
---
> Order before final reordering
> a b c 
> Number of inputs = 3
> BDD reordering with genetic: from 7 to ... 7 nodes in 
> New order
> c a b 
> Testing Cudd_bddClosestCube
> TEST-CC:: H(f, f)
> T-F    : 4 nodes 1 leaves 3 minterms
> T-G    : 4 nodes 1 leaves 3 minterms
> T-C (0) : 3 nodes 1 leaves 2 minterms
> T-GN   : 4 nodes 1 leaves 5 minterms
> T-N (1) : 4 nodes 1 leaves 1 minterms
> TEST-CC:: H(f, g)
> T-F    : 4 nodes 1 leaves 3 minterms
> T-G    : 4 nodes 1 leaves 1 minterms
> T-C (2) : 4 nodes 1 leaves 1 minterms
> T-GN   : 4 nodes 1 leaves 7 minterms
> T-N (0) : 3 nodes 1 leaves 2 minterms
> TEST-CC:: H(f, h)
> T-F    : 4 nodes 1 leaves 3 minterms
> T-G    : 4 nodes 1 leaves 1 minterms
> T-C (0) : 4 nodes 1 leaves 1 minterms
> T-GN   : 4 nodes 1 leaves 7 minterms
> T-N (0) : 4 nodes 1 leaves 1 minterms
> TEST-CC:: H(g, f)
> T-F    : 4 nodes 1 leaves 1 minterms
> T-G    : 4 nodes 1 leaves 3 minterms
> T-C (2) : 4 nodes 1 leaves 1 minterms
> T-GN   : 4 nodes 1 leaves 5 minterms
> T-N (0) : 4 nodes 1 leaves 1 minterms
> TEST-CC:: H(g, g)
> T-F    : 4 nodes 1 leaves 1 minterms
> T-G    : 4 nodes 1 leaves 1 minterms
> T-C (0) : 4 nodes 1 leaves 1 minterms
> T-GN   : 4 nodes 1 leaves 7 minterms
> T-N (1) : 4 nodes 1 leaves 1 minterms
> TEST-CC:: H(g, h)
> T-F    : 4 nodes 1 leaves 1 minterms
> T-G    : 4 nodes 1 leaves 1 minterms
> T-C (3) : 4 nodes 1 leaves 1 minterms
> T-GN   : 4 nodes 1 leaves 7 minterms
> T-N (0) : 4 nodes 1 leaves 1 minterms
> TEST-CC:: H(h, f)
> T-F    : 4 nodes 1 leaves 1 minterms
> T-G    : 4 nodes 1 leaves 3 minterms
> T-C (0) : 4 nodes 1 leaves 1 minterms
> T-GN   : 4 nodes 1 leaves 5 minterms
> T-N (1) : 4 nodes 1 leaves 1 minterms
> TEST-CC:: H(h, g)
> T-F    : 4 nodes 1 leaves 1 minterms
> T-G    : 4 nodes 1 leaves 1 minterms
> T-C (3) : 4 nodes 1 leaves 1 minterms
> T-GN   : 4 nodes 1 leaves 7 minterms
> T-N (0) : 4 nodes 1 leaves 1 minterms
> TEST-CC:: H(h, h)
> T-F    : 4 nodes 1 leaves 1 minterms
> T-G    : 4 nodes 1 leaves 1 minterms
> T-C (0) : 4 nodes 1 leaves 1 minterms
> T-GN   : 4 nodes 1 leaves 7 minterms
> T-N (1) : 4 nodes 1 leaves 1 minterms
> End of test.  Performed  calls.
1c1
< # Nanotrav Version #0.12, Release date 2003/12/31
---
> # Nanotrav Version #0.13, Release date 2015/7/15
3,459c3,29
< 
< 
< **************READING IN NETWORK***************
< 
< Number of inputs: 4
< 
< 
< 
< **************GENERATING NETWORK BDD***************
< 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< : 7 nodes 1 leaves 3 minterms
< ID =  0xffd18	index = 0	T = 0xffd12	E =  0xffd17
< ID =  0xffd17	index = 1	T = 0xffd0a	E = !1        
< ID =  0xffd0a	index = 2	T = 0xffd07	E = !1        
< ID =  0xffd07	index = 3	T = 1        	E = !1        
< ID =  0xffd12	index = 1	T = 0xffd06	E = !1        
< ID =  0xffd06	index = 2	T = 1        	E = !1        
< 
< 
< 
< **************COUNTING BDD NODES***************
< 
< 
< Top node: 0x1FFA300 
< 
< Number of nodes: 7 
< 
< Number of levels: 4 
< 
< 
< **************DETERMINING BOUNDSET AND FREESET NODES***************
< 
< Node: 1FFA000 
< Node index: 2147483647 
< i: 2147483647 
< 
< Node: 1FFA0C0 
< Node index: 2 
< i: 2 
< 
< Node: 1FFA240 
< Node index: 1 
< i: 1 
< 
< Node: 1FFA0E0 
< Node index: 3 
< i: 3 
< 
< Node: 1FFA140 
< Node index: 2 
< i: 2 
< 
< Node: 1FFA2E0 
< Node index: 1 
< i: 1 
< 
< Node: 1FFA300 
< Node index: 0 
< i: 0 
< 
< 
< 
< 
<  T node value: 1FFA0C0
< number edges: 0 
< E node value: 1FFA001
< number edges: 1 
< 
< 
< 
<  T node value: 1FFA140
< number edges: 1 
< E node value: 1FFA001
< number edges: 2 
< 
< 
< 
<  T node value: 1FFA240
< number edges: 2 
< E node value: 1FFA2E0
< number edges: 2 
< Node: 1FFA000 
< Node index: 2147483647 
< i: 2147483647 
< 
< Node: 1FFA0C0 
< Node index: 2 
< i: 2 
< 
< Node: 1FFA240 
< Node index: 1 
< i: 1 
< 
< Node: 1FFA0E0 
< Node index: 3 
< i: 3 
< 
< Node: 1FFA140 
< Node index: 2 
< i: 2 
< 
< Node: 1FFA2E0 
< Node index: 1 
< i: 1 
< 
< Node: 1FFA300 
< Node index: 0 
< i: 0 
< 
< 
< 
< 
<  T node value: 1FFA0C0
< number edges: 0 
< E node value: 1FFA001
< number edges: 1 
< 
< 
< 
<  T node value: 1FFA140
< number edges: 1 
< E node value: 1FFA001
< number edges: 2 
< 
< 
< 
<  T node value: 1FFA240
< number edges: 2 
< E node value: 1FFA2E0
< number edges: 2 
< 
< 
< 
<  T node value: 1FFA000
< number edges: 2 
< E node value: 1FFA001
< number edges: 3 
< 
< 
< 
<  T node value: 1FFA0C0
< number edges: 3 
< E node value: 1FFA001
< number edges: 4 
< 
< 
< 
<  T node value: 1FFA0E0
< number edges: 4 
< E node value: 1FFA001
< number edges: 5 
< 
< 
< 
<  T node value: 1FFA140
< number edges: 5 
< E node value: 1FFA001
< number edges: 6 
< 
< 
< 
<  T node value: 1FFA240
< number edges: 6 
< E node value: 1FFA2E0
< number edges: 6 
< Cut Level: 3
< 
< Number of Sigma Zero Edges = 6
< i: 2147483647 
< i: 2 
< i: 1 
< i: 3 
< i: 2 
< i: 1 
< i: 0 
< boundsetSize: 5
< n: 2
< Bound Set: 1FFA240, 1FFA2E0, 1FFA300, 1FFA0C0, 1FFA240,
< Free Set: 1FFA000, 1FFA0C0,
< 
< 
< **************DETERMINING NUMBER OF SIG ZERO EDGES***************
< 
< 
< 
< **************BUILDING DIVISOR BDD***************
< 
< Entering for loop. i = 0
< Node is in freeset. j = 1
< Node was redirected to one node.
< Entering for loop. i = 1
< Entering for loop. i = 2
< Entering for loop. i = 3
< Node is in freeset. j = 0
< Node was redirected to one node.
< Entering for loop. i = 4
< Node is in freeset. j = 0
< Node was redirected to one node.
< BDD reordering with sifting: from 7 to ... 6 nodes in 
< 
< 
< **************BUILDING QUOTIENT BDD***************
< 
< Entering for QUOTIENT loop. i = 0
< Quotient T child fine.
< Quotient E child fine.
< Entering for QUOTIENT loop. i = 1
< Quotient T child fine.
< Quotient E child fine.
< Entering for QUOTIENT loop. i = 2
< Quotient T child fine.
< Quotient E child fine.
< Entering for QUOTIENT loop. i = 3
< Quotient T child fine.
< Quotient E child fine.
< Entering for QUOTIENT loop. i = 4
< Quotient T child fine.
< Quotient E child fine.
< Printing Quotient BLIF
< Printing Quotient DOT
< 
< End of Bi-Decomposition Method.
< 
< 
< 
< 
< Starting Functional Decomposition Method
< 
< Node: 2010560 
< Node index: 2147483647 
< i: 2147483647 
< 
< Node: 2010620 
< Node index: 2 
< i: 2 
< 
< Node: 20107A0 
< Node index: 1 
< i: 1 
< 
< Node: 2010640 
< Node index: 3 
< i: 3 
< 
< Node: 20106A0 
< Node index: 2 
< i: 2 
< 
< Node: 2010840 
< Node index: 1 
< i: 1 
< 
< Node: 2010860 
< Node index: 0 
< i: 0 
< 
< Node: 20197C0 
< Node index: 2147483647 
< i: 2147483647 
< 
< Node: 2019880 
< Node index: 2 
< i: 2 
< 
< Node: 2019A00 
< Node index: 1 
< i: 1 
< 
< Node: 20198A0 
< Node index: 3 
< i: 3 
< 
< Node: 2019900 
< Node index: 2 
< i: 2 
< 
< Node: 2019AA0 
< Node index: 1 
< i: 1 
< 
< Node: 2019AC0 
< Node index: 0 
< i: 0 
< 
< boundsetSize = 5
< Freeset Size = 2
< One node is: 2010560
< Freeset[0] is: 1FFA000
< Freeset[1] is: 1FFA0C0
< Entering for boundset loop. i = 0, node = 20197C0
< Entering next loop. j = 0, node = 20197C0
< Node is in freeset. j = 0, node = 20197C0
< Node was added to bset_cutset.
< Node was added to cutset.
< Already in boundset loop. i = 0, node = 20197C1
< Entering for boundset loop. i = 1, node = 2019880
< Entering next loop. j = 0, node = 2019880
< Entering next loop. j = 1, node = 2019880
< Already in boundset loop. i = 1, node = 20197C1
< Entering for boundset loop. i = 2, node = 20198A0
< Entering next loop. j = 0, node = 20198A0
< Entering next loop. j = 1, node = 20198A0
< Node is in freeset. j = 1, node = 20198A0
< Node was added to bset_cutset.
< Node was added to cutset.
< Already in boundset loop. i = 2, node = 20197C1
< Entering for boundset loop. i = 3, node = 2019900
< Entering next loop. j = 0, node = 2019900
< Entering next loop. j = 1, node = 2019900
< Already in boundset loop. i = 3, node = 20197C1
< Entering for boundset loop. i = 4, node = 2019A00
< Entering next loop. j = 0, node = 2019A00
< Entering next loop. j = 1, node = 2019A00
< Already in boundset loop. i = 4, node = 2019AA0
< cvar = 2
< 
< Cutset node[0] = 20197C0
< Cutset node[1] = 20198A0
< temp_cvar = 2
< temp_cvar = 1
< i = 1
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< temp_cvar = 0
< number of bits = 2
< 
< Our boundset nodes: 2019880 2019900
< Our cutset nodes: 20197C0 20198A0
< Added 2019880 to our mapping, then child: 20197C0, else child: 20197C1
< Added 20197C0's encoding 3
< Added 20197C1's encoding 2
< Added 2019900 to our mapping, then child: 20198A0, else child: 20197C1
< Added 20198A0's encoding 1
< Added 20197C1's encoding 2
< One Node = 20197C0, Zero Node = 20197C1
< 
< *********Mapping**********
< Mapping node = 2019880, Mapping E_Enc = 2, Mapping T_Enc = 3
< Mapping node = 2019900, Mapping E_Enc = 2, Mapping T_Enc = 1
< 
< *********End of Mapping**********
< Map_Node = 2019880, Encoding = 3, Shifted Encoding = 3
< BDD reordering with sifting: from 7 to ... 5 nodes in 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< Map_Node = 2019880, Encoding = 2, Shifted Encoding = 2
< BDD reordering with sifting: from 5 to ... 5 nodes in 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< : 5 nodes 1 leaves 3 minterms
< ID =  0x100cd6	index = 2	T = 0x100cd0	E = !1        
< ID =  0x100cd0	index = 1	T = 0x100cc6	E = !1        
< ID =  0x100cc6	index = 0	T = 1        	E =  0x100cc5
< ID =  0x100cc5	index = 3	T = 1        	E = !1        
< 
< Map_Node = 2019900, Encoding = 1, Shifted Encoding = 1
< BDD reordering with sifting: from 5 to ... 5 nodes in 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< Map_Node = 2019900, Encoding = 2, Shifted Encoding = 2
< BDD reordering with sifting: from 5 to ... 5 nodes in 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< : 4 nodes 1 leaves 2 minterms
< ID =  0x100cd6	index = 2	T = 0x100ccb	E = !1        
< ID =  0x100ccb	index = 1	T = 0x100cc5	E = !1        
< ID =  0x100cc5	index = 3	T = 1        	E = !1        
< 
< Root node: 2019AC0
< filename: ash_curt_files/hw5_0.blif
< Creating blif...
< Optimizing variable ordering...
< Estimated delay: 0.5us...
< Map_Node = 2019880, Encoding = 3, Shifted Encoding = 1
< BDD reordering with sifting: from 5 to ... 5 nodes in 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< Map_Node = 2019880, Encoding = 2, Shifted Encoding = 1
< BDD reordering with sifting: from 5 to ... 5 nodes in 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< : 4 nodes 1 leaves 2 minterms
< ID =  0x100cd6	index = 2	T = 0x100ccb	E = !1        
< ID =  0x100ccb	index = 1	T = 0x100cc5	E = !1        
< ID =  0x100cc5	index = 3	T = 1        	E = !1        
< 
< Map_Node = 2019900, Encoding = 1, Shifted Encoding = 0
< Map node child before assignment is: 20198E0
< Map node child after assignment is: 20197C1
< BDD reordering with sifting: from 5 to ... 5 nodes in 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< Map_Node = 2019900, Encoding = 2, Shifted Encoding = 1
< BDD reordering with sifting: from 5 to ... 5 nodes in 
< 
< 
< Printing the BDD for f: ptr to the nodes, T & E children
< 
< : 4 nodes 1 leaves 6 minterms
< ID =  0x100cd6	index = 2	T = 0x100cc9	E = !1        
< ID =  0x100cc9	index = 3	T = 1        	E = !0x100cc3
< ID =  0x100cc3	index = 1	T = 1        	E = !1        
< 
< Root node: 2019AC0
< filename: ash_curt_files/hw5_1.blif
< Creating blif...
< Optimizing variable ordering...
< Estimated delay: 0.5us...
< Net name: first
< End of main
< 
< 
---
> Order before final reordering
> a b c d 
> Number of inputs = 4
> Testing BDD minimization algorithms
> TEST-MINI: Constrain (B) 4 nodes
> TEST-MINI:: A
> T-M    : 7 nodes 1 leaves 3 minterms
> T-M L1 : 5 nodes 1 leaves 6 minterms
> T-M M1 : 5 nodes 1 leaves 6 minterms
> T-M R1 : 5 nodes 1 leaves 6 minterms
> T-M C1 : 5 nodes 1 leaves 6 minterms
> TEST-MINI: (lb,ub) : (7,7) nodes
> T-M S1 : 5 nodes 1 leaves 6 minterms
> T-M N1 : 7 nodes 1 leaves 3 minterms
> T-M A1 : 7 nodes 1 leaves 3 minterms
> TEST-MINI: f 7 comp 5 mini 5 rest 5 cons 5 sque 5 na 7 and 7
> TEST-MINI:: A
> T-M    : 7 nodes 1 leaves 3 minterms
> T-M L0 : is the zero DD
> T-M M0 : is the zero DD
> T-M R0 : is the zero DD
> T-M C0 : is the zero DD
> TEST-MINI: (lb,ub) : (1,4) nodes
> T-M S0 : is the zero DD
> T-M N0 : is the zero DD
> T-M A0 : is the zero DD
> TEST-MINI: f 7 comp 1 mini 1 rest 1 cons 1 sque 1 na 1, and 1
